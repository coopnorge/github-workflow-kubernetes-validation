---
on:
  workflow_call:
    inputs:
      environment-matrix-json:
        required: true
        type: string
        description: |
          A json array containing info about environments. Required keys are 'destination-cluster'. That can be api-production
          or api-staging. If do-argocd-diff=true then 'argocd-appname' and 'argocd-tracking-directory' are also required.
          Example:
          [{
              "argocd-appname": "helloworld-api-production-helloworld",
              "argocd-tracking-directory": "kubernetes/kustomize-deployments/production" ,
              "destination-cluster" : "api-production",
            },
            {
              "argocd-appname": "helloworld-api-staging-helloworld",
              "argocd-tracking-directory": "kubernetes/kustomize-deployments/staging" ,
              "destination-cluster" : "api-staging",
          }]
      do-argocd-diff:
        required: false
        default: true
        type: boolean
        description: |
          Boolean to enable argocd diff.
      kubernetes-version:
        required: true
        default: 1.21.14
        type: string
        description: |
          Target kubernetes version. Used for schema validation.
    secrets:
      argocd-api-token:
        required: false
        description: |
          Token to get read only access to argocd. This is a global secret secrets.ARGOCD_API_TOKEN
jobs:
  validate-kubernetes:
    env:
      ARGOCD_URL: argocd.internal.coop
      ARGOCD_BIN: ./argocd
      SCHEMA_BASE_URL: https://raw.githubusercontent.com/coopnorge/kubernetes-schemas/main
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJSON(inputs.environment-matrix-json) }}
    # General note, may steps need to be in setup in an OCI. Also some stuff can be migrated to an action.
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Install kubescore
        run: |
          wget -q -O- https://github.com/zegl/kube-score/releases/download/v1.14.0/kube-score_1.14.0_linux_amd64 > kube-score
          chmod +x kube-score

      - name: Install kubeconform
        run: |
          wget -q -O- https://github.com/yannh/kubeconform/releases/download/v0.4.13/kubeconform-linux-amd64.tar.gz | tar -xzvf - kubeconform

      - name: Install Argo CD Cli
        if: inputs.do-argocd-diff == true
        run: |
          wget -q -O- https://${ARGOCD_URL}/download/argocd-linux-amd64 > ${ARGOCD_BIN}
          chmod +x ${ARGOCD_BIN}

      - name: Install Dyff
        run: |
          wget -q -O- https://github.com/homeport/dyff/releases/download/v1.5.1/dyff_1.5.1_linux_amd64.tar.gz | tar -xzvf - dyff

      - name: Check kube-score
        run: |
          kustomize build ${{ matrix.argocd-tracking-directory }} \
          | ./kube-score \
            score  -

      - name: Check kube-confrom
        run: |
          kustomize build ${{ matrix.argocd-tracking-directory }} \
            | ./kubeconform \
              -strict \
              -verbose \
              -kubernetes-version ${{ inputs.kubernetes-version }} \
              -schema-location default \
              -schema-location ${SCHEMA_BASE_URL}/${{ matrix.destination-cluster }}/'{{ .ResourceKind }}{{ .KindSuffix }}.json'

      - name: Check diff
        if: inputs.do-argocd-diff == true
        id: argocd-diff
        run: |
          set -x
          set +e
          ${ARGOCD_BIN} \
            --auth-token ${ARGOCD_API_TOKEN:=EMPTY} \
            --grpc-web --server $ARGOCD_URL \
            app diff ${{ matrix.argocd-appname}} \
              --local ${{ matrix.argocd-tracking-directory }} > diff.txt ; EXIT=$?
          set -e
          case $EXIT in
            2)
              echo "General code error"
              exit 1
              ;;
            1)
              echo "Found diff"
              ;;
            0)
              echo "No diff found"
              echo "# no diff" >> diff.txt
              ;;
            *)
              echo "Unknown exit code"
              exit 1
              ;;
          esac

          echo "Diff compared to actual state for app **${{ matrix.argocd-appname }}**" > body.txt
          echo >> body.txt
          echo >> body.txt
          echo "\`\`\`yaml" >> body.txt
          cat diff.txt >> body.txt
          echo "\`\`\`" >> body.txt
          body=$(cat body.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=body::$body"

        env:
          ARGOCD_API_TOKEN: ${{ secrets.argocd-api-token }}
          KUBECTL_EXTERNAL_DIFF: "./dyff between --omit-header"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: github.event_name == 'pull_request' && inputs.do-argocd-diff == true
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Diff compared to actual state for app **${{ matrix.argocd-appname }}**

      - name: Create comment
        if: github.event_name == 'pull_request' && inputs.do-argocd-diff == true && steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.argocd-diff.outputs.body }}
          reactions: rocket

      - name: Update comment
        if: github.event_name == 'pull_request' && inputs.do-argocd-diff == true && steps.fc.outputs.comment-id != '' && steps.fc.outputs.comment-body != steps.argocd-diff.outputs.body
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: ${{ steps.argocd-diff.outputs.body }}
          reactions: rocket
          edit-mode: replace
